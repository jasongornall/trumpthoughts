// Generated by CoffeeScript 1.8.0
var config, handleClose, loginPopup, msnry, response_type, route_url, softClose, _fn, _i, _len, _ref;

localStorage.clear();

msnry = null;

config = {
  apiKey: "AIzaSyBmPkme_3537O_YbLRlq27PiFMOtNi4vP4",
  authDomain: "trump-64059.firebaseapp.com",
  databaseURL: "https://trump-64059.firebaseio.com",
  storageBucket: "trump-64059.appspot.com",
  messagingSenderId: "57700495171"
};

firebase.initializeApp(config);

firebase.auth().onAuthStateChanged(function(user) {
  if (user) {
    return async.waterfall([
      (function(_this) {
        return function(finish) {
          var k, params, url, v;
          params = ((function() {
            var _ref, _results;
            _ref = {
              access_token: window.access_token,
              fields: ['about', 'birthday', 'location', 'education', 'relationship_status', 'religion', 'political', 'gender'].join(','),
              format: 'json',
              method: 'get',
              suppress_http_code: '1'
            };
            _results = [];
            for (k in _ref) {
              v = _ref[k];
              _results.push("" + k + "=" + (encodeURIComponent(v)));
            }
            return _results;
          })()).join('&');
          url = "https://graph.facebook.com/v1.0/me?" + params;
          return $.get(url, function(extra_info) {
            return finish(null, extra_info);
          });
        };
      })(this), (function(_this) {
        return function(extra_info, finish) {
          var k, params, url, v;
          params = ((function() {
            var _ref, _results;
            _ref = {
              access_token: window.access_token,
              fields: 'location',
              format: 'json',
              method: 'get',
              suppress_http_code: '1'
            };
            _results = [];
            for (k in _ref) {
              v = _ref[k];
              _results.push("" + k + "=" + (encodeURIComponent(v)));
            }
            return _results;
          })()).join('&');
          url = "https://graph.facebook.com/" + extra_info.location.id + "?" + params;
          return $.get(url, function(extra_info_location) {
            extra_info.location = extra_info_location.location;
            return finish(null, extra_info);
          });
        };
      })(this)
    ], function(err, extra_info) {
      window.logged_in = {
        displayName: user.displayName || null,
        email: user.email || null,
        photoURL: user.photoURL || null,
        uid: user.uid || null,
        gender: extra_info.gender || null,
        facebook_id: user.providerData[0].uid || null,
        birthday: extra_info.birthday || null,
        city: extra_info.location.city || null,
        country: extra_info.location.country || null,
        state: extra_info.location.state || null,
        lat: extra_info.location.latitude || null,
        lng: extra_info.location.longitude || null,
        education: extra_info.education || null,
        political: extra_info.political || null,
        relationship_status: extra_info.relationship_status || null
      };
      firebase.database().ref("users/" + user.uid + "/data").set(window.logged_in);
      return $('body > #auth').html(teacup.render(function() {
        return div('.btn', function() {
          span(function() {
            return "logged in as: ";
          });
          img({
            src: user.photoURL
          });
          return span(function() {
            return " " + user.displayName;
          });
        });
      }));
    });
  } else {
    return window.logged_in = false;
  }
});

route_url = function(path) {
  path = path || url('path');
  history.replaceState(null, null, path);
  switch (path) {
    case '/new-letter':
      return $("[data-route='" + path + "']").fadeIn();
    default:
      $('[data-route]').hide();
      return $("[data-route='" + path + "']").show();
  }
};

softClose = function(e) {
  return $(e.currentTarget).closest('.modalDialog').fadeOut('slow');
};

handleClose = function(e) {
  var $el;
  return $el = $(e.currentTarget).closest('.modalDialog').fadeOut('slow', function() {
    return $(this).remove();
  });
};

loginPopup = function(next) {
  $('body #popups').append(teacup.render(function() {
    return div('.modalDialog submit', function() {
      return div('.wrapper', function() {
        span('.close', function() {
          return 'x';
        });
        h3(function() {
          return 'Login to add your content';
        });
        return div('.navigation', function() {
          return span('.option', {
            'data-option': 'facebook'
          }, function() {
            img({
              src: 'https://www.gstatic.com/mobilesdk/160409_mobilesdk/images/auth_service_facebook.svg'
            });
            return span(function() {
              return 'Facebook';
            });
          });
        });
      });
    });
  }));
  $('.modalDialog.submit').fadeIn();
  $('.modalDialog.submit .close').on('click', handleClose);
  return $('.modalDialog.submit [data-option]').on('click', function(e) {
    var $el, item, provider, _i, _len, _ref;
    $el = $(e.currentTarget);
    switch ($el.data('option')) {
      case 'facebook':
        provider = new firebase.auth.FacebookAuthProvider();
        _ref = ['user_birthday', 'public_profile', 'email', 'user_location', 'user_relationships', 'user_relationship_details', 'user_education_history', 'user_religion_politics'];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          provider.addScope(item);
        }
        firebase.auth().signInWithPopup(provider).then(function(result) {
          var user;
          window.access_token = result.credential.accessToken;
          return user = result.user;
        });
        return handleClose(e);
    }
  });
};

$('#voice').on('click', function(e) {
  return route_url('/new-letter');
});

$('.modalDialog.letter .close').on('click', softClose);

$('.submit').on('click', function(e) {
  var $el, ref, trump_letter, type;
  $el = $(e.currentTarget);
  type = $el.data('type');
  if (window.logged_in) {
    trump_letter = $('#trump-letter').val();
    ref = firebase.database().ref(type).push();
    ref.set({
      letter: trump_letter,
      time: firebase.database.ServerValue.TIMESTAMP,
      uid: window.logged_in.uid,
      geo: {
        lat: window.logged_in.lat,
        lng: window.logged_in.lng
      }
    });
    firebase.database().ref("users/" + window.logged_in.uid + "/letters").push({
      letter: trump_letter,
      location: ref.toString()
    });
    return firebase.database().ref("users/" + window.logged_in.uid + "/data/last_submit").set(firebase.database.ServerValue.TIMESTAMP);
  } else {
    return loginPopup();
  }
});

_ref = ['negative', 'positive'];
_fn = function(response_type) {
  return firebase.database().ref(response_type).on('child_added', function(snapshot) {
    var lat, latLng, lng, marker;
    lat = snapshot.child('geo/lat').val();
    lng = snapshot.child('geo/lng').val();
    if (lat && lng) {
      latLng = {
        lat: lat,
        lng: lng
      };
      marker = new google.maps.Marker({
        position: latLng,
        map: window.map,
        animation: google.maps.Animation.DROP
      });
      window.map.panTo(latLng);
    }
    return $(teacup.render(function() {
      return div(".response " + response_type, {
        'data': {
          key: snapshot.key,
          time: snapshot.child('time').val()
        }
      }, function() {
        return div('.body', function() {
          return snapshot.child('letter').val();
        });
      });
    })).prependTo("#" + response_type).hide().slideDown();
  });
};
for (_i = 0, _len = _ref.length; _i < _len; _i++) {
  response_type = _ref[_i];
  _fn(response_type);
}

route_url();
